gloo:
  kubeGateway:
    # Enable K8s Gateway integration
    enabled: true
  gatewayProxies:
    gatewayProxy:
      # ddoyle: Not able to set this to "true" (i.e. disable the default proxy deployment), as that gives an error with the Helm templates ...
      disabled: true
      healthyPanicThreshold: 0
      gatewaySettings:
        # Disable the default Edge Gateway CRs from being created
        enabled: false
        disableGeneratedGateways: true
      kind:
        deployment:
          replicas: 1
      service:
        # Set this to different ports, so we can use port 80 on our K8S Gateway API proxy ....
        httpPort: 81
        httpsFirst: true
        httpsPort: 444
        type: LoadBalancer
  gateway:
    persistProxySpec: true
    logLevel: info
    validation:
      allowWarnings: true
      alwaysAcceptResources: false
  gloo:
    logLevel: info
    # To simplify the demo, we disable any features that are affected by leader election
    # In Gloo Gateway, this is just status reporting, but still we do this to be safe
    disableLeaderElection: true
    deployment:
      replicas: 1
      customEnv:
        # The portal plugin is disabled by default, so must explicitly enable it
        - name: GG_PORTAL_PLUGIN
          value: "false"
      livenessProbeEnabled: true
      stats:
        enabled: "true"
        serviceMonitorEnabled: "true"
        podMonitorEnabled: "true"
  discovery:
    enabled: false
  rbac:
    namespaced: true
    nameSuffix: gg-demo
  settings:
    # Expose the Control Plane Admin API (port 10010 on Gloo)
    devMode: true

    # Include ingress-gw in watchNamespaces to observe downstream effect of removing the namespace's downstream effect after
    # config has been applied
    watchNamespaces:
    - gloo-system
    - httpbin
    - ingress-gw

    # Configure some standard descriptors to be used by the rate-limit portion of our tests
    # This rule states: "if a request has a descriptor with key=generic_key, value=2, apply 1 requests/second rate limit"
    rateLimit:
      descriptors:
        - key: generic_key
          value: "2"
          rateLimit:
            requestsPerUnit: 10
            unit: MINUTE
observability:
  enabled: false

prometheus:
  # setting to false will disable prometheus, removing it from Gloo's chart dependencies
  enabled: false

grafana:
  # setting to false will disable grafana, removing it from Gloo's chart dependencies
  defaultInstallationEnabled: false

# This demo does not deal with Gloo Federation, so we disable the components to simplify the installation
gloo-fed:
  enabled: false
  glooFedApiserver:
    enable: false

gateway-portal-web-server:
  # Enable the sub-chart for the Portal webserver
  enabled: false

global:
  extensions:
    # Rate-Limit Configuration
    rateLimit:
      enabled: true
      deployment:
        logLevel: debug

    # Ext-Auth Configuration
    extAuth:
      enabled: true
      deployment:
        logLevel: debug